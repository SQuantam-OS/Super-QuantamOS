name: Build QuantamOS

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up environment
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libncurses-dev bison flex libssl-dev libelf-dev grub-pc-bin grub-efi-amd64-bin xorriso ghc cabal-install libx11-dev libxft-dev libxinerama-dev wget

      - name: Build Linux Kernel
        run: |
          wget https://cdn.kernel.org/pub/linux/kernel/v6.x/linux-6.10.2.tar.xz
          tar -xvf linux-6.10.2.tar.xz
          cd linux-6.10.2
          make menuconfig
          make -j$(nproc)
          sudo make modules_install
          sudo make install
          if [ ! -f /boot/vmlinuz-6.10.2 ]; then
            echo "Kernel image not found! Exiting."
            exit 1
          fi
        working-directory: ${{ github.workspace }}

      - name: Prepare root filesystem
        run: |
          cd ${{ github.workspace }}
          mkdir -p quantam/rootfs/{bin,sbin,etc,proc,sys,usr/{bin,sbin}}

          wget https://busybox.net/downloads/busybox-1.33.1.tar.bz2
          tar -xvf busybox-1.33.1.tar.bz2
          cd busybox-1.33.1
          make defconfig
          make -j$(nproc)
          make install CONFIG_PREFIX=../quantam/rootfs

          echo "::sysinit:/etc/init.d/rcS" > ../quantam/rootfs/etc/inittab
          mkdir -p ../quantam/rootfs/etc/init.d
          echo "#!/bin/sh" > ../quantam/rootfs/etc/init.d/rcS
          echo "mount -t proc none /proc" >> ../quantam/rootfs/etc/init.d/rcS
          echo "mount -t sysfs none /sys" >> ../quantam/rootfs/etc/init.d/rcS
          echo "/sbin/mdev -s" >> ../quantam/rootfs/etc/init.d/rcS
          chmod +x ../quantam/rootfs/etc/init.d/rcS
        working-directory: ${{ github.workspace }}

      - name: Install and Configure Xmonad
        run: |
          sudo apt-get install -y xmonad
          cp /usr/bin/xmonad ../quantam/rootfs/usr/bin/
          sudo apt-get remove -y xmonad
          mkdir -p ../quantam/rootfs/usr/share/X11/xorg.conf.d
        working-directory: ${{ github.workspace }}

      - name: Install Distrobox
        run: |
          mkdir -p ~/quantam/rootfs/usr/local/bin
          curl -s https://raw.githubusercontent.com/89luca89/distrobox/main/install | sudo sh
          cd /usr/local/bin
          sudo mv distrobox distrobox-enter distrobox-generate-entry distrobox-list distrobox-upgrade distrobox-assemble distrobox-ephemeral distrobox-host-exec distrobox-rm distrobox-create distrobox-export distrobox-init distrobox-stop ~/quantam/rootfs/usr/local/bin
        working-directory: ${{ github.workspace }}

      - name: Create Initramfs
        run: |
          cd ~/quantam
          cd rootfs
          find . | cpio -o --format=newc | gzip > ../initramfs.gz
        working-directory: ${{ github.workspace }}

      - name: Create ISO
        run: |
          mkdir -p ~/iso/boot/grub
          cp /boot/vmlinuz-6.10.2 iso/boot/vmlinuz
          cp /boot/initramfs.gz iso/boot/initramfs.gz

          cat > iso/boot/grub/grub.cfg << EOF
          set default=0
          set timeout=5

          menuentry "QuantamOS" {
              linux /boot/vmlinuz root=/dev/sr0
              initrd /boot/initramfs.gz
          }
          EOF

          grub-mkrescue -o quantam.iso iso
        working-directory: ${{ github.workspace }}

      - name: Upload ISO
        uses: actions/upload-artifact@v3
        with:
          name: quantam-os-iso
          path: quantam.iso
